// <auto-generated />
using System;
using EMS.ConfigurationDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EMS.ConfigurationDbContext.Migrations
{
    [DbContext(typeof(ConfigurationContext))]
    [Migration("20181129102910_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("EMS.Models.Configuration.DataContextConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConnectionString");

                    b.Property<string>("Connector")
                        .IsRequired();

                    b.Property<string>("ContextType");

                    b.Property<string>("DbConnector");

                    b.Property<string>("DbContextType");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("WorkerConfigurationId");

                    b.HasKey("Id");

                    b.HasIndex("WorkerConfigurationId");

                    b.ToTable("DataContextConfiguration");
                });

            modelBuilder.Entity("EMS.Models.Configuration.DataSourceConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConnectionString");

                    b.Property<string>("Connector")
                        .IsRequired();

                    b.Property<string>("ContextType");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("WorkerConfigurationId");

                    b.HasKey("Id");

                    b.HasIndex("WorkerConfigurationId");

                    b.ToTable("DataSourceConfiguration");
                });

            modelBuilder.Entity("EMS.Models.Configuration.DataTargetConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConnectionString");

                    b.Property<string>("Connector")
                        .IsRequired();

                    b.Property<string>("ContextType");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("WorkerConfigurationId");

                    b.HasKey("Id");

                    b.HasIndex("WorkerConfigurationId");

                    b.ToTable("DataTargetConfiguration");
                });

            modelBuilder.Entity("EMS.Models.Configuration.WorkerConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiKey");

                    b.Property<string>("WorkerName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("EMS.Models.Configuration.DataContextConfiguration", b =>
                {
                    b.HasOne("EMS.Models.Configuration.WorkerConfiguration")
                        .WithMany("Contexts")
                        .HasForeignKey("WorkerConfigurationId");
                });

            modelBuilder.Entity("EMS.Models.Configuration.DataSourceConfiguration", b =>
                {
                    b.HasOne("EMS.Models.Configuration.WorkerConfiguration")
                        .WithMany("Sources")
                        .HasForeignKey("WorkerConfigurationId");
                });

            modelBuilder.Entity("EMS.Models.Configuration.DataTargetConfiguration", b =>
                {
                    b.HasOne("EMS.Models.Configuration.WorkerConfiguration")
                        .WithMany("Targets")
                        .HasForeignKey("WorkerConfigurationId");
                });
#pragma warning restore 612, 618
        }
    }
}
